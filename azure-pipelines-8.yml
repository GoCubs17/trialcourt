# Docker image, Azure Container Registry, and Azure Web App
# 1. Test the code
#    a. On Pull Requests, and
#    b. Commits to develop, stage, master
# 2. Build a Docker image, push it to an Azure Container Registry.
#    a. On commits to develop, stage, master
# 3. Deploy it to an Azure Web App.
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  - develop
  - stage
  - master

pr:
  - develop
  - stage
  - master

resources:
- repo: self

variables:
  webAppName: 'jcc-trialcourt-prod'
  dockerRegistryServiceConnection: '04632e1a-759c-4263-b8b4-61cc1ded4d4e'
  imageRepository: 'build/$(webAppName)'
  containerRegistry: 'jccwebservicesregistry.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.SourceBranchName)-$(Build.SourceVersion)-build_$(Build.BuildId)'
  phpVersion: 7.3.15
  
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Test
  displayName: Test
  jobs:
  - job: Compile
    displayName: Compile code
    pool:
      vmImage: $(vmImageName)
    steps:
    - script: |
        sudo update-alternatives --set php /usr/bin/php$(phpVersion)
        sudo update-alternatives --set phar /usr/bin/phar$(phpVersion)
        sudo update-alternatives --set phpdbg /usr/bin/phpdbg$(phpVersion)
        sudo update-alternatives --set php-cgi /usr/bin/php-cgi$(phpVersion)
        sudo update-alternatives --set phar.phar /usr/bin/phar.phar$(phpVersion)
        php -version
      displayName: 'Use PHP version $(phpVersion)'
    - script: composer install --no-interaction --prefer-dist
      displayName: 'Composer install'
    - script: scripts/theme.sh -a
      displayName: 'Build subtheme'
  - job: Analyze
    displayName: Analyze code
    pool:
      vmImage: $(vmImageName)
    steps:
    - script: composer -n lint
      displayName: 'Lint php for syntax errors'
    - script: composer -n code-sniff
      displayName: 'Check coding standards'
    - script: composer -n unit-test
      displayName: 'Run unit tests'

- stage: Build
  displayName: Build
  dependsOn: Test
  condition: and(succeeded('Test'), ne(variables['Build.SourceBranchName'], 'merge'))
  jobs:  
  - job: Build
    displayName: Build image
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build
      inputs:
        command: build
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        tags: |
          $(tag)
        arguments: --label buildtype=nightly
    - task: Docker@2
      displayName: Push to registry
      inputs:
        command: push
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: $(imageRepository)
        tags: |
          $(tag)

- stage: Deploy
  displayName: Deploy
  dependsOn: Build
  condition: succeeded('Build')
  jobs:
  - job: Deploy
    displayName: Deploy to Web App Service
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: AzureWebAppContainer@1
      displayName: 'Azure Web App on Container Deploy: $(webAppName)'
      inputs:
        azureSubscription: 'Web CMS PROD Drupal'
        appName: '$(webAppName)'
        containers: '$(containerRegistry)/$(imageRepository):$(tag)'

